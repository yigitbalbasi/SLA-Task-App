// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package appswitchermodule.proxies;

public class CustomToken implements com.mendix.systemwideinterfaces.core.IEntityProxy
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject customTokenMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "AppSwitcherModule.CustomToken";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		authorization("authorization"),
		userId("userId"),
		timesToUse("timesToUse"),
		timeToLive("timeToLive"),
		CustomToken_MendixSSOUser("AppSwitcherModule.CustomToken_MendixSSOUser");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public CustomToken(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected CustomToken(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject customTokenMendixObject)
	{
		if (customTokenMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, customTokenMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.customTokenMendixObject = customTokenMendixObject;
		this.context = context;
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static appswitchermodule.proxies.CustomToken initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new appswitchermodule.proxies.CustomToken(context, mendixObject);
	}

	public static appswitchermodule.proxies.CustomToken load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return appswitchermodule.proxies.CustomToken.initialize(context, mendixObject);
	}

	/**
	 * @return value of authorization
	 */
	public final java.lang.String getauthorization()
	{
		return getauthorization(getContext());
	}

	/**
	 * @param context
	 * @return value of authorization
	 */
	public final java.lang.String getauthorization(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.authorization.toString());
	}

	/**
	 * Set value of authorization
	 * @param authorization
	 */
	public final void setauthorization(java.lang.String authorization)
	{
		setauthorization(getContext(), authorization);
	}

	/**
	 * Set value of authorization
	 * @param context
	 * @param authorization
	 */
	public final void setauthorization(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String authorization)
	{
		getMendixObject().setValue(context, MemberNames.authorization.toString(), authorization);
	}

	/**
	 * @return value of userId
	 */
	public final java.lang.String getuserId()
	{
		return getuserId(getContext());
	}

	/**
	 * @param context
	 * @return value of userId
	 */
	public final java.lang.String getuserId(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.userId.toString());
	}

	/**
	 * Set value of userId
	 * @param userid
	 */
	public final void setuserId(java.lang.String userid)
	{
		setuserId(getContext(), userid);
	}

	/**
	 * Set value of userId
	 * @param context
	 * @param userid
	 */
	public final void setuserId(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String userid)
	{
		getMendixObject().setValue(context, MemberNames.userId.toString(), userid);
	}

	/**
	 * @return value of timesToUse
	 */
	public final java.lang.Integer gettimesToUse()
	{
		return gettimesToUse(getContext());
	}

	/**
	 * @param context
	 * @return value of timesToUse
	 */
	public final java.lang.Integer gettimesToUse(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.timesToUse.toString());
	}

	/**
	 * Set value of timesToUse
	 * @param timestouse
	 */
	public final void settimesToUse(java.lang.Integer timestouse)
	{
		settimesToUse(getContext(), timestouse);
	}

	/**
	 * Set value of timesToUse
	 * @param context
	 * @param timestouse
	 */
	public final void settimesToUse(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer timestouse)
	{
		getMendixObject().setValue(context, MemberNames.timesToUse.toString(), timestouse);
	}

	/**
	 * @return value of timeToLive
	 */
	public final java.lang.Integer gettimeToLive()
	{
		return gettimeToLive(getContext());
	}

	/**
	 * @param context
	 * @return value of timeToLive
	 */
	public final java.lang.Integer gettimeToLive(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.timeToLive.toString());
	}

	/**
	 * Set value of timeToLive
	 * @param timetolive
	 */
	public final void settimeToLive(java.lang.Integer timetolive)
	{
		settimeToLive(getContext(), timetolive);
	}

	/**
	 * Set value of timeToLive
	 * @param context
	 * @param timetolive
	 */
	public final void settimeToLive(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer timetolive)
	{
		getMendixObject().setValue(context, MemberNames.timeToLive.toString(), timetolive);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of CustomToken_MendixSSOUser
	 */
	public final mendixsso.proxies.MendixSSOUser getCustomToken_MendixSSOUser() throws com.mendix.core.CoreException
	{
		return getCustomToken_MendixSSOUser(getContext());
	}

	/**
	 * @param context
	 * @return value of CustomToken_MendixSSOUser
	 * @throws com.mendix.core.CoreException
	 */
	public final mendixsso.proxies.MendixSSOUser getCustomToken_MendixSSOUser(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		mendixsso.proxies.MendixSSOUser result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.CustomToken_MendixSSOUser.toString());
		if (identifier != null) {
			result = mendixsso.proxies.MendixSSOUser.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of CustomToken_MendixSSOUser
	 * @param customtoken_mendixssouser
	 */
	public final void setCustomToken_MendixSSOUser(mendixsso.proxies.MendixSSOUser customtoken_mendixssouser)
	{
		setCustomToken_MendixSSOUser(getContext(), customtoken_mendixssouser);
	}

	/**
	 * Set value of CustomToken_MendixSSOUser
	 * @param context
	 * @param customtoken_mendixssouser
	 */
	public final void setCustomToken_MendixSSOUser(com.mendix.systemwideinterfaces.core.IContext context, mendixsso.proxies.MendixSSOUser customtoken_mendixssouser)
	{
		if (customtoken_mendixssouser == null) {
			getMendixObject().setValue(context, MemberNames.CustomToken_MendixSSOUser.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.CustomToken_MendixSSOUser.toString(), customtoken_mendixssouser.getMendixObject().getId());
		}
	}

	@Override
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return customTokenMendixObject;
	}

	@Override
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final appswitchermodule.proxies.CustomToken that = (appswitchermodule.proxies.CustomToken) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

  /**
   * Gives full name ("Module.Entity" name) of the type of the entity.
   *
   * @return the name
   */
	public static java.lang.String getType()
	{
		return entityName;
	}
}
